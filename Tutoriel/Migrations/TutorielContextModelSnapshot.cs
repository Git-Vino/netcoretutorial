// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Tutoriel.Data;

namespace Tutoriel.Migrations
{
    [DbContext(typeof(TutorielContext))]
    partial class TutorielContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Tutoriel.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CourseID");

                    b.Property<int>("PlayerID");

                    b.Property<int?>("TournamentID");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("PlayerID");

                    b.HasIndex("TournamentID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Tutoriel.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EnrollmentDate");

                    b.Property<string>("Tag");

                    b.HasKey("ID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Tutoriel.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentID");

                    b.Property<int>("Credits");

                    b.Property<string>("Title");

                    b.HasKey("TournamentID");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("Tutoriel.Models.Enrollment", b =>
                {
                    b.HasOne("Tutoriel.Models.Player", "Player")
                        .WithMany("Enrollments")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tutoriel.Models.Tournament", "Tournament")
                        .WithMany("Enrollments")
                        .HasForeignKey("TournamentID");
                });
#pragma warning restore 612, 618
        }
    }
}
